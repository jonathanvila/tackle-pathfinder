kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pathfinder-postgresql
  labels:
    app.kubernetes.io/name: pathfinder-postgresql
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: pathfinder-postgresql
    app.kubernetes.io/part-of: tackle
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
---
kind: Secret
apiVersion: v1
metadata:
  name: pathfinder-postgresql
  labels:
    app.kubernetes.io/name: pathfinder-postgresql
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: pathfinder-postgresql
    app.kubernetes.io/part-of: tackle
data:
  database-name: cGF0aGZpbmRlcl9kYg==
  database-password: cGF0aGZpbmRlcg==
  database-user: cGF0aGZpbmRlcg==
type: Opaque
---
kind: Service
apiVersion: v1
metadata:
  name: pathfinder-postgresql
  labels:
    app.kubernetes.io/name: pathfinder-postgres
    app.kubernetes.io/version: '10.6'
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: pathfinder-postgres
    app.kubernetes.io/part-of: tackle
spec:
  ports:
    - name: tcp
      protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    app.kubernetes.io/name: pathfinder-postgres
    app.kubernetes.io/version: '10.6'
  type: ClusterIP
  sessionAffinity: None
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: pathfinder-postgres
  labels:
    app.kubernetes.io/name: pathfinder-postgres
    app.kubernetes.io/version: '10.6'
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: pathfinder-postgres
    app.kubernetes.io/part-of: tackle
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pathfinder-postgres
      app.kubernetes.io/version: '10.6'
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pathfinder-postgres
        app.kubernetes.io/version: '10.6'
    spec:
      volumes:
        - name: pathfinder-postgresql-data
          persistentVolumeClaim:
            claimName: pathfinder-postgresql
      containers:
        - name: postgres
          image: 'postgres:10.6'
          ports:
            - containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: pathfinder-postgresql
                  key: database-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pathfinder-postgresql
                  key: database-password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: pathfinder-postgresql
                  key: database-name
          resources: {}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - "-c"
                - |
                  psql -U $POSTGRES_USER -d $POSTGRES_DB -c 'SELECT 1'
            initialDelaySeconds: 60
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - "-c"
                - |
                  psql -U $POSTGRES_USER -d $POSTGRES_DB -c 'SELECT 1'
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: pathfinder-postgresql-data
              mountPath: /var/lib/postgresql
          securityContext:
            privileged: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
  labels:
    app.kubernetes.io/name: tackle-pathfinder
    app.kubernetes.io/part-of: tackle
    app.kubernetes.io/version: 0.0.1-SNAPSHOT-native
    app.kubernetes.io/component: rest
  name: tackle-pathfinder
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app.kubernetes.io/name: tackle-pathfinder
    app.kubernetes.io/part-of: tackle
    app.kubernetes.io/version: 0.0.1-SNAPSHOT-native
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
  labels:
    app.kubernetes.io/component: rest
    app.kubernetes.io/version: 0.0.1-SNAPSHOT-native
    app.kubernetes.io/name: tackle-pathfinder
    app.kubernetes.io/part-of: tackle
  name: tackle-pathfinder
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/version: 0.0.1-SNAPSHOT-native
      app.kubernetes.io/name: tackle-pathfinder
      app.kubernetes.io/part-of: tackle
  template:
    metadata:
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
      labels:
        app.kubernetes.io/component: rest
        app.kubernetes.io/version: 0.0.1-SNAPSHOT-native
        app.kubernetes.io/name: tackle-pathfinder
        app.kubernetes.io/part-of: tackle
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: QUARKUS_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: pathfinder-postgresql
                  key: database-user
            - name: QUARKUS_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pathfinder-postgresql
                  key: database-password
          image: quay.io/jonathanvila/tackle-pathfinder:0.0.1-SNAPSHOT-native
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /pathfinder/q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: tackle-pathfinder
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /pathfinder/q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              memory: "100Mi"
              cpu: "100m"
